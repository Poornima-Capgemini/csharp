//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmpClientDemo.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Emp", Namespace="http://schemas.datacontract.org/2004/07/WCFEmpService")]
    [System.SerializableAttribute()]
    public partial class Emp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BasicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Basic {
            get {
                return this.BasicField;
            }
            set {
                if ((this.BasicField.Equals(value) != true)) {
                    this.BasicField = value;
                    this.RaisePropertyChanged("Basic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dept {
            get {
                return this.DeptField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptField, value) != true)) {
                    this.DeptField = value;
                    this.RaisePropertyChanged("Dept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desig {
            get {
                return this.DesigField;
            }
            set {
                if ((object.ReferenceEquals(this.DesigField, value) != true)) {
                    this.DesigField = value;
                    this.RaisePropertyChanged("Desig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Empno {
            get {
                return this.EmpnoField;
            }
            set {
                if ((this.EmpnoField.Equals(value) != true)) {
                    this.EmpnoField = value;
                    this.RaisePropertyChanged("Empno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEmployService")]
    public interface IEmployService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/UpdateEmp", ReplyAction="http://tempuri.org/IEmployService/UpdateEmpResponse")]
        bool UpdateEmp(EmpClientDemo.ServiceReference1.Emp objEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/UpdateEmp", ReplyAction="http://tempuri.org/IEmployService/UpdateEmpResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmpAsync(EmpClientDemo.ServiceReference1.Emp objEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/AutoGenerateEmpno", ReplyAction="http://tempuri.org/IEmployService/AutoGenerateEmpnoResponse")]
        int AutoGenerateEmpno();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/AutoGenerateEmpno", ReplyAction="http://tempuri.org/IEmployService/AutoGenerateEmpnoResponse")]
        System.Threading.Tasks.Task<int> AutoGenerateEmpnoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/InsertEmp", ReplyAction="http://tempuri.org/IEmployService/InsertEmpResponse")]
        bool InsertEmp(EmpClientDemo.ServiceReference1.Emp objEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/InsertEmp", ReplyAction="http://tempuri.org/IEmployService/InsertEmpResponse")]
        System.Threading.Tasks.Task<bool> InsertEmpAsync(EmpClientDemo.ServiceReference1.Emp objEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/ShowEmp", ReplyAction="http://tempuri.org/IEmployService/ShowEmpResponse")]
        EmpClientDemo.ServiceReference1.Emp[] ShowEmp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/ShowEmp", ReplyAction="http://tempuri.org/IEmployService/ShowEmpResponse")]
        System.Threading.Tasks.Task<EmpClientDemo.ServiceReference1.Emp[]> ShowEmpAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/SearchEmp", ReplyAction="http://tempuri.org/IEmployService/SearchEmpResponse")]
        EmpClientDemo.ServiceReference1.Emp SearchEmp(int empno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployService/SearchEmp", ReplyAction="http://tempuri.org/IEmployService/SearchEmpResponse")]
        System.Threading.Tasks.Task<EmpClientDemo.ServiceReference1.Emp> SearchEmpAsync(int empno);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployServiceChannel : EmpClientDemo.ServiceReference1.IEmployService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployServiceClient : System.ServiceModel.ClientBase<EmpClientDemo.ServiceReference1.IEmployService>, EmpClientDemo.ServiceReference1.IEmployService {
        
        public EmployServiceClient() {
        }
        
        public EmployServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UpdateEmp(EmpClientDemo.ServiceReference1.Emp objEmp) {
            return base.Channel.UpdateEmp(objEmp);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmpAsync(EmpClientDemo.ServiceReference1.Emp objEmp) {
            return base.Channel.UpdateEmpAsync(objEmp);
        }
        
        public int AutoGenerateEmpno() {
            return base.Channel.AutoGenerateEmpno();
        }
        
        public System.Threading.Tasks.Task<int> AutoGenerateEmpnoAsync() {
            return base.Channel.AutoGenerateEmpnoAsync();
        }
        
        public bool InsertEmp(EmpClientDemo.ServiceReference1.Emp objEmp) {
            return base.Channel.InsertEmp(objEmp);
        }
        
        public System.Threading.Tasks.Task<bool> InsertEmpAsync(EmpClientDemo.ServiceReference1.Emp objEmp) {
            return base.Channel.InsertEmpAsync(objEmp);
        }
        
        public EmpClientDemo.ServiceReference1.Emp[] ShowEmp() {
            return base.Channel.ShowEmp();
        }
        
        public System.Threading.Tasks.Task<EmpClientDemo.ServiceReference1.Emp[]> ShowEmpAsync() {
            return base.Channel.ShowEmpAsync();
        }
        
        public EmpClientDemo.ServiceReference1.Emp SearchEmp(int empno) {
            return base.Channel.SearchEmp(empno);
        }
        
        public System.Threading.Tasks.Task<EmpClientDemo.ServiceReference1.Emp> SearchEmpAsync(int empno) {
            return base.Channel.SearchEmpAsync(empno);
        }
    }
}
